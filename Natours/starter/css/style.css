/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

/*universal reset*/
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box; /*paddings and margins are no longer added to total size*/
}

body { /*set fonts in body, so all child*/
  font-family: "Lato", sans-serif;
  font-weight: 400;
  font-size: 16px;
  line-height: 1.7;
  color: #777;
  padding: 30px;
}

.header {
  height: 95vh; /*fills 95% of the viewport*/
  background-image: linear-gradient(
    to right bottom,
    rgba(126, 213, 111, 0.80),
    rgba(40, 180, 133, 0.80)),
    url("../img/hero.jpg");
  background-size: cover;
  background-position: top; /*this makes sure top stays the same as image sizes and crops*/
  position: relative;
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
}

.logo-box {
  position: absolute;
  top: 40px;
  left: 40px;
}

.logo {
  height: 35px;
}

.text-box {
  position: absolute;
  top: 40%;
  left: 50%;
  transform: translate(-50%,-50%);
  text-align: center; /*this works because of display inline-block*/
}

.heading-primary {
  color: #ffffff;
  text-transform: uppercase;
  backface-visibility: hidden; /*this fixes shaking in animation*/
  margin-bottom: 30px;
}

.heading-primary-main {
  display: block;
  font-size: 60px;
  font-weight: 400;
  letter-spacing: 35px;

  animation-name: moveInLeft;
  animation-duration: 1s;
  animation-timing-function: ease-out;

  /*
  animation-iteration-count: 3;
  animation-delay: 1s;
  */
}

.heading-primary-sub {
  display: block;
  font-size: 20px;
  font-weight: 700;
  letter-spacing: 17.4px;
  animation: moveInRight 1s ease-out;

  /* animation: is short for all code below!
  animation-name: moveInRight;
  animation-duration: 1s;
  animation-timing-function: ease-out;
  */
}

@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-100px);
  }

  80% {
    transform: translateX(10px);
  }

  100% {
    opacity: 1;
    transform: translate(0);
  }
}

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(100px);
  }

  80% {
    transform: translateX(-10px);
  }

  100% {
    opacity: 1;
    transform: translate(0);
  }
}

@keyframes moveInBottom {
  0% {
    transform: translateY(30px);
    opacity: 0;
  }
  100% {
    transform: translate(0);
    opacity: 1;
  }
}

/*this talks about the states, if we don't style it'll be blue and purple!*/
.btn:link,
.btn:visited {
  display: inline-block; /*this will make it have it's own space*/
  text-transform: uppercase;
  text-decoration: none;
  padding: 15px 40px;
  border-radius: 100px;
  /*putting 'all' means all are enabled, but you can be more speficic
  Also this needs to be put in the initial state. This is short hand.*/
  transition: all .2s;
  position: relative; /*this is for the after pseudoelement to position correctly*/
}

.btn:hover {
  transform: translateY(-3px);
  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
}
.btn:active {
  transform: translateY(-1px);
  box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);
}

.btn-white {
  background-color: #ffffff;
  color: #777;
}
/*
This is an after pseudostate
*/
.btn::after { /*treated as a child element of the button*/
  content: "";
  display: inline-block; /*we want it to look the same*/
  width: 100%; /*will be the size of the button*/
  height: 100%;
  border-radius: 100px;
  position: absolute; /*all this positioning to keep it behind the button*/
  top: 0;
  left: 0;
  z-index: -1; /*this is the order in which elements are overlayed*/
  transition: all .4s;
}

/*Absolute positioning works by finding first element with relative position,
and taking it from there.*/

/*Pseudo Elements :: are default last child element of tag. This is a virtual element.
In this case we make it exactly the same as the original, so as to create
an effect on the button, that is not the button itself!*/
.btn-white::after {
  background-color: #ffffff;
}

.btn:hover::after {
  transform: scaleX(1.4) scaleY(1.8);
  opacity: 0;
}

/*animation fill mode backwards automatically
applies styles of 0% before animation starts*/
.btn-animated{
  animation: moveInBottom .5s ease-out .75s;
  animation-fill-mode: backwards;
}

